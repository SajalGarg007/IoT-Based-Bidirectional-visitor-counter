#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Blynk.h>
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>

#define SCREEN_WIDTH 128  // OLED display width, in pixels
#define SCREEN_HEIGHT 64  // OLED display height, in pixels
#define OLED_RESET -1     // Reset pin # (or -1 if sharing Arduino reset pin)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

char auth[] = "g7a87RRmeRJCrTBRLlghPBhJI2opTdcG";  // You should get Auth Token in the Blynk App.
char ssid[] = "Get Your Own_Wifi";
char pass[] = "ptanahi mujhe";

#define inSensor 14   //D5
#define outSensor 12  //D6

int inStatus;
int outStatus;

int countin = 0;
int countout = 0;


int in = 0;
int out = 0;
int now;

//MY arduino variables
int i = 1;
boolean state1 = true;
boolean state2 = true;
int sum;
boolean flag1 = true;
boolean flag2 = true;

#define relay 0  //D3
WidgetLED light(V0);

void setup() {
  Serial.begin(115200);
  Blynk.begin(auth, ssid, pass);

  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);  //initialize with the I2C addr 0x3C (128x64)
  
  pinMode(inSensor, INPUT_PULLUP);
  pinMode(outSensor, INPUT_PULLUP);
  pinMode(relay, OUTPUT);
  digitalWrite(relay, HIGH);

  Serial.println("Visitor Counter Demo");
  display.clearDisplay();
  display.setTextSize(2);
  display.setTextColor(WHITE);
  display.setCursor(20, 20);
  display.print("Visitor");
  display.setCursor(20, 40);
  display.print("Counter");
  display.display();
  // delay(3000);
}

void loop() {
  Blynk.run();  // Initiates Blynk
  inStatus = digitalRead(inSensor);
  outStatus = digitalRead(outSensor);


  if (inStatus == 0 && flag1) {
    flag1 = false;
    in = countin++;
  }
  if (outStatus == 0 && flag2) {
    flag2 = false;
    out = countout++;
  }
  sum = in - out;
  if (sum < 0) {
    sum = -1 * sum;
  }
  if (sum <= 1) {
    check();
  } else {
    if (in > out && outStatus == 0) {
      countin = 0;
      in = 0;
      countout = 0;
      out = 0;
    }
    if (out > in && inStatus == 0) {
      countin = 0;
      in = 0;
      countout = 0;
      out = 0;
    }
  }
  if (inStatus == 1) {
    flag1 = true;
  }
  if (outStatus == 1) {
    flag2 = true;
  }
  if (now <= 0) {
    now = 0;
    digitalWrite(relay, LOW);
    light.on();
    display.clearDisplay();
    display.setTextSize(2);
    display.setTextColor(WHITE);
    display.setCursor(0, 15);
    display.print("No Visitor");
    display.setCursor(5, 40);
    display.print("Light Off");
    display.display();
    Serial.println("No Visitors! Light Off");
    
  } else {
    digitalWrite(relay, HIGH);
    light.off();

    display.clearDisplay();
    display.setTextColor(WHITE);

    display.setTextSize(1);
    display.setCursor(15, 0);
    display.print("Current Visitor");
    display.setTextSize(2);
    display.setCursor(50, 15);
    display.print(max(0, now));

    display.setTextSize(1);
    display.setCursor(0, 40);
    display.print("IN: ");
    display.print(in);

    display.setTextSize(1);
    display.setCursor(70, 40);
    display.print("OUT: ");
    display.print(out);

    display.display();
    Serial.print("Current Visitor: ");
    Serial.println(now);
    Serial.print("IN: ");
    Serial.println(in);
    Serial.print("OUT: ");
    Serial.println(out);
    
  }
  Blynk.virtualWrite(V1, in);   // Visitors In
  Blynk.virtualWrite(V2, out);  // Visitors Out
  Blynk.virtualWrite(V3, now);  // Current Visitors
  
}
void check() {
  if (inStatus == 0 && i == 1 && state1) {
    delay(100);
    i++;
    state1 = false;
  }

  if (outStatus == 0 && i == 2 && state2) {
    delay(100);
    i = 1;
    now++;
    state2 = false;
  }
  if (outStatus == 0 && i == 1 && state2) {
    delay(100);
    i = 2;
    state2 = false;
  }

  if (inStatus == 0 && i == 2 && state1) {
    delay(100);
    now--;
    i = 1;
    state1 = false;
  }

  if (inStatus == 1) {
    state1 = true;
    
  }
  if (outStatus == 1) {
    state2 = true;
  }
}